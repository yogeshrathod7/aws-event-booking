version: 0.2

env:
  variables:
    ECR_REPO: "778265707519.dkr.ecr.us-east-1.amazonaws.com/event-booking-backend"
    DB_SECRET_ARN: "arn:aws:secretsmanager:us-east-1:778265707519:secret:event-booking/db-credentials-QfQafF"

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPO

      # Fetch DB secret from Secrets Manager
      - echo Fetching DB credentials...
      - |
        DB_SECRET=$(aws secretsmanager get-secret-value --secret-id $DB_SECRET_ARN --query SecretString --output text) || { echo "Failed to fetch DB secret"; exit 1; }
        export DB_USERNAME=$(echo $DB_SECRET | jq -r .username)
        export DB_PASSWORD=$(echo $DB_SECRET | jq -r .password)
        export DB_HOST=$(echo $DB_SECRET | jq -r .host)
        export DB_PORT=$(echo $DB_SECRET | jq -r '.port // 3306')
        export DB_NAME=$(echo $DB_SECRET | jq -r .dbname)

      - IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION}-$(date +%Y%m%d%H%M%S)
      - echo "Using image tag: $IMAGE_TAG"

  build:
    commands:
      - echo Building backend image...
      - |
        docker build \
          --build-arg DB_USERNAME=$DB_USERNAME \
          --build-arg DB_PASSWORD=$DB_PASSWORD \
          --build-arg DB_HOST=$DB_HOST \
          --build-arg DB_PORT=$DB_PORT \
          --build-arg DB_NAME=$DB_NAME \
          -t $ECR_REPO:$IMAGE_TAG ./backend

  post_build:
    commands:
      - echo Pushing backend image...
      - docker push $ECR_REPO:$IMAGE_TAG
      - printf '[{"name":"backend","imageUri":"%s"}]' "$ECR_REPO:$IMAGE_TAG" > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
